proc	PrintHelloWorld		
=	cInt2	233	
printStr	" !#$%&'()*+,-./0123456789:;<=> @ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~"		
printStr	" "		
printStr	"helloworld!"		
printf	42	c	
printf	95	c	
printf	10		
printf	cInt2		
return			
endp	PrintHelloWorld		
proc	SquareSum		
*	_a	-1	@temp1
-	0	@temp1	@temp2
=	temp	@temp2	
*	_a	0	@temp3
=	temp	@temp3	
*	_a	0	@temp4
=	temp	@temp4	
*	_a	_a	@temp5
=	temp	@temp5	
*	_a	_a	@temp6
-	0	@temp6	@temp7
-	0	@temp7	@temp8
*	b	b	@temp9
+	@temp8	@temp9	@temp8
=	temp	@temp8	
return	temp		
endp	SquareSum		
proc	_myStop		
printStr	"input a char and enter:"		
scanf	temp		
endp	_myStop		
proc	NsquareSum		
=	Temp	temp	
==	times	1	
jz	L1:		
return	temp		
label	L1:		
-	times	1	@temp10
pushpara	@temp10		
pushpara	temp		
call	NsquareSum	@temp11	
*	Temp	@temp11	@temp11
=	Temp	@temp11	
return	Temp		
endp	NsquareSum		
proc	NextAlphabet		
+	x	1	@temp12
return	@temp12		
endp	NextAlphabet		
proc	main		
callvoid	PrintHelloWorld		
printStr	"please input number counts:"		
scanf	num		
=	i	0	
=	_a	666	
-	0	20	@temp13
=	intArray[0]	@temp13	
printf	intArray[0]		
=	abc[0]	97	
=	abc[1]	98	
=	abc[2]	99	
pushpara	abc[0]		
call	NextAlphabet	@temp14	
printf	@temp14		
>	_a	intArray[0]	
jz	L2:		
-	intArray[0]	1	@temp15
=	_a	@temp15	
label	L2:		
printStr	"_a is"		
printf	_a		
<	_a	intArray[0]	
jz	L3:		
=	_a	2	
label	L3:		
printStr	"_a is"		
printf	_a		
==	_a	2	
jz	L4:		
*	intArray[0]	2	@temp16
=	_a	@temp16	
label	L4:		
printStr	"_a is"		
printf	_a		
!=	_a	intArray[0]	
jz	L5:		
=	_a	4	
label	L5:		
printStr	"_a is"		
printf	_a		
>=	_a	4	
jz	L6:		
-	0	0	@temp17
=	_a	@temp17	
label	L6:		
printStr	"_a is"		
printf	_a		
<=	_a	0	
jz	L7:		
printStr	"if ok....perhaps"		
printf	_a		
=	_a	666	
label	L7:		
printStr	"_a is"		
printf	_a		
==	num	0	
jz	L8:		
printStr	"result:0"		
jmp	L9:		
label	L8:		
==	num	1	
jz	L10:		
scanf	temp1		
printStr	"result:"		
+	temp1	10	@temp18
-	@temp18	10	@temp18
printf	@temp18		
jmp	L11:		
label	L10:		
==	num	2	
jz	L12:		
scanf	temp1		
scanf	temp2		
printStr	"result:"		
-	temp2	2	@temp20
+	@temp20	2	@temp20
pushpara	@temp20		
+	temp1	0	@temp19
pushpara	@temp19		
call	SquareSum	@temp21	
printf	@temp21		
jmp	L13:		
label	L12:		
>	num	0	
jz	L14:		
=	temp2	0	
<	i	num	
jz	L15:		
label	L16:		
scanf	temp1		
pushpara	num		
pushpara	temp1		
call	NsquareSum	@temp22	
+	temp2	@temp22	@temp22
=	temp2	@temp22	
+	i	1	@temp23
=	i	@temp23	
<	i	num	
jnz	L16:		
label	L15:		
=	a3[0]	temp2	
printStr	"result:"		
printf	a3[0]		
label	L14:		
label	L13:		
label	L11:		
label	L9:		
callvoid	_myStop		
pushpara	1		
pushpara	1		
call	NsquareSum	@temp24	
=	i	@temp24	
printStr	" "		
+	temp1	temp2	@temp25
=	k	@temp25	
+	temp1	temp2	@temp26
=	i	@temp26	
=	j	temp1	
+	j	temp2	@temp27
=	j	@temp27	
callvoid	_myStop		
return			
endp	main		
